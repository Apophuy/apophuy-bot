{
  "parser": "@typescript-eslint/parser",
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "airbnb-typescript/base",
    "plugin:import",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:prettier/recommended",
    "prettier"
  ],
  "plugins": ["import", "prettier"],
  "parserOptions": { "ecmaVersion": 2020, "sourceType": "module", "project": ["tsconfig.json"] },
  "rules": {
    "import/no-unresolved": "off",
    "import/order": [
      "warn",
      {
        "groups": [
          "external", // <- External imports go first
          "builtin", // Built-in imports (come from NodeJS native)
          "internal", // <- Absolute imports
          ["sibling", "parent"], // <- Relative imports, the sibling and parent types they can be mingled together
          "index", // <- index imports
          "unknown" // <- unknown
        ],
        "newlines-between": "always",
        "alphabetize": {
          /* sort in ascending order. Options: ["ignore", "asc", "desc"] */
          "order": "asc",
          /* ignore case. Options: [true, false] */
          "caseInsensitive": true
        }
      }
    ],
    "@typescript-eslint/naming-convention": [
      // * https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/naming-convention.md
      "warn",
      {
        "selector": "default",
        "format": ["camelCase", "snake_case"],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "allow"
      },
      {
        "selector": "variable",
        "format": ["camelCase", "UPPER_CASE", "snake_case"],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "allow"
      },
      {
        "selector": "function",
        "format": ["PascalCase", "camelCase"]
      },
      {
        "selector": "variable",
        "types": ["function"],
        "format": ["PascalCase", "camelCase"]
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        "selector": "memberLike",
        "format": null
      }
    ],
    "@typescript-eslint/lines-between-class-members": ["warn"],
    "@typescript-eslint/no-unused-vars": ["warn"],
    "prettier/prettier": ["warn"],
    "no-console": ["warn"],
    "@typescript-eslint/no-useless-constructor": ["warn"],
    "@typescript-eslint/no-empty-function": ["warn"],
    "eslint import/no-extraneous-dependencies": ["error", { "peerDependencies": true }]
  }
}
